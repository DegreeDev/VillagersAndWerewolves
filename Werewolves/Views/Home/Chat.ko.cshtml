@{
	ViewBag.Title = "Chat";
}
<div data-application="chat">
	<div class="row-fluid">
		<div class="chat-pane col-md-4">
			<div class="panel panel-info">
				<div class="panel-heading">
					<h3 class="panel-title">Chat
						<label>
						Name: <input type="text" data-bind="value: name" />
					</label></h3>
					
				</div>
				<div class="panel-body" data-bind="visible: isLoggedIn">
					<div class="input-group">
						<input type="text" class="form-control" data-bind="value: message" />
						<span class="input-group-btn">
							<button class="btn" data-bind="click: sendMessage">Send</button>
						</span>
					</div>
					<br />
					<table class="table table-striped table-condensed table-bordered">
						<tbody data-bind="foreach: topMessages">
							<tr>
								<td><b data-bind="text: n + ': '"></b><span data-bind="text:m"></span></td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>
@section Scripts {
	@Scripts.Render("~/bundles/lib")
	<script type="text/javascript" src="~/Scripts/mousetrap.min.js"></script>
	<script type="text/javascript" src="~/signalr/hubs"></script>
	
		<script>
			/// <reference path="_references.js" />
			$(function () {
				$(document).on("chat.start", function () {

					function viewModel(){
						var self = this, 
							hub = $.connection.chatHub;

						self.name = ko.observable(null);
						self.message = ko.observable();
						self.messages = ko.observableArray();

						self.isLoggedIn = ko.computed(function () {
							return self.name !== null;
						});
						self.topMessages = ko.computed(function () {
							var count = 10; 
							return ko.utils.arrayFilter(self.messages(), function (i) {
								if(--count > 0)
									return i;
								return; 
							});
						});

						self.sendMessage = function () {
							hub.server.handleMessage(self.name(), self.message());
							self.message("");
						};
						hub.client.message = function (name, message) {
							self.messages.unshift({ n: name, m: message });
						};
						$.connection.hub.start();
					}
					ko.applyBindings(new viewModel());
				}).trigger("chat.start");
			});
		</script>
	}

